---
import Prose from "@/components/Content/Prose.astro";
import NavigationButtons from "@/components/Content/NavigationButtons.astro";
import SidebarPage from "@/layouts/SidebarPage.astro";
import { DEFAULT_LANG } from "@/util/i18n";
import { getStaticPathsByLocales } from "@/util/path";
import { getCollection, render } from "astro:content";
import type { RenderedContent, CollectionEntry } from "astro:content";

export async function getStaticPaths() {
    const entries = await getCollection("guides");
    const localePaths = getStaticPathsByLocales();

    const entriesByLocale = entries.flatMap((entry) => {
        return localePaths.flatMap((locale) => {
            const entryLang = entry.id.split("/")[0] || DEFAULT_LANG;

            if (entryLang !== (locale.params.path ?? DEFAULT_LANG)) return;

            return {
                props: {
                    entry,
                    ...locale.props,
                },
                params: {
                    slug: entry.data.url ?? entry.id.split("/")[2],
                    ...locale.params,
                },
            };
        });
    });

    return entriesByLocale.filter(Boolean);
}
const previousAndNextPage = async (entry: CollectionEntry<"guides">) => {
    const entries = await getCollection("guides");
    const sortedEntries = entries.sort((a, b) => a.id.localeCompare(b.id));
    const currentIndex = sortedEntries.findIndex((e) => e.id === entry.id);
    const previous =
        currentIndex === 0 ? null : sortedEntries[currentIndex - 1];
    const next =
        currentIndex === sortedEntries.length - 1
            ? null
            : sortedEntries[currentIndex + 1];
    return {
        previous: previous
            ? { url: previous.data.url!, title: previous.data.title }
            : null,
        next: next ? { url: next.data.url!, title: next.data.title } : null,
    };
};
const { entry, lang } = Astro.props;
const { previous, next } = await previousAndNextPage(entry);
const { Content, headings } = await render(entry);
---

<SidebarPage
    lang={lang}
    meta={{
        title: "KAPLAY Guides, " + entry.data.title,
        description: entry.data.description,
        image: entry.data.image?.src,
        keywords: "kaplayjs, guides, documentation",
    }}
    sidebarMode="guides"
    headings={headings}>
    <Prose>
        <Content />
        <NavigationButtons previous={previous} next={next} />
    </Prose>
</SidebarPage>
